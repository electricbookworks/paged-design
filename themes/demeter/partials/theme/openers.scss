// Requires that margin-top and line-height-default
// are defined with the same units, e.g. px.
$opener-image-height: $margin-top + ($line-height-default * 16);
$opener-image-bleed: 3mm;

.component-body {

    // The heading below the image
    header {
        @include extend-to-right-sidebar();

        &:first-of-type {
            margin-top: calc(#{$opener-image-height} - #{$line-height-default} * 1);
        }

        & ~ p.author {
            @include small-caps();
            font-family: $font-text-secondary;
            font-size: $font-size-default-small;
            line-height: $line-height-default;
            margin-bottom: $line-height-default * 1.5;
        }
    }

    // Depends on this image being early enough
    // in the chapter that it's on the first page.
    // And these only display big on .component-body.
    .content-opener-image {

        figure {
            display: contents;
            margin: 0;

            img {
                position: absolute;

                // We set the bleed directly here rather than using $bleed
                // because we want the image to appear the same in
                // screen PDF (where bleed is 0) and print PDF (with bleed).
                // We use calc where variables might be defined with
                // different units, e.g. mm or pt.
                top: -($margin-top + $opener-image-bleed);
                left: -($margin-inside + $opener-image-bleed);
                right: calc((#{$margin-outside} + #{$sidebar-width} + $opener-image-bleed) * -1);

                height: $opener-image-height + $opener-image-bleed;
                margin: 0;
                max-width: none;
                object-fit: cover;
                width: $page-width + ($opener-image-bleed * 2);
            }

            figcaption {

                // Position
                position: absolute;
                bottom: 0;
                right: -($sidebar-width - $sidebar-gap);
                width: $sidebar-width - ($sidebar-gap * 2);

                // Appearance
                border-top: $rule-thickness solid $theme-color-accent;
                font-family: $font-text-secondary;
                font-size: $font-size-default-small;
                padding-top: $line-height-default / 2;
            }
        }
    }

    // Also see part-page.scss
    &.part {

        .content-opener-image {

            figure {

                img {
                    min-height: $page-height + ($opener-image-bleed * 2);
                    width: ($page-width - $sidebar-width) + $opener-image-bleed;
                    top: -($margin-top + $opener-image-bleed);
                    left: -($margin-inside + $opener-image-bleed);
                    z-index: -1;
                }
            }
        }

        header {

            // Header fills page so that
            // any other items on the part page
            // appear on the next page.
            &:first-of-type {
                margin-top: $page-height - $margin-top - $margin-bottom - $line-height-default;
            }

            h1 {
                // To do: add bleed to edge of header
                // probably by adding a border-top to the
                // header and the strong:first-of-type.

                // Position
                position: absolute;
                top: -($sidebar-width + $margin-top + ($opener-image-bleed * 2));
                right: -($page-height + ($opener-image-bleed * 2));
                transform: rotate(90deg);
                transform-origin: 0 100%;
                margin: 0;

                // Layout
                display: flex;
                align-items: center;
                height: $sidebar-width + $opener-image-bleed;
                width: $page-height + ($opener-image-bleed * 2);
                padding-left: $sidebar-gap + ($opener-image-bleed * 2);
                padding-top: $opener-image-bleed;

                // Type
                background-color: $theme-color-accent;
                color: white;
                font-size: 38px;
                letter-spacing: 0.075em;
                text-transform: uppercase;

                strong:first-of-type {

                    // Position
                    position: relative;
                    top: 0;
                    left: -($opener-image-bleed);

                    // Layout
                    display: inline-flex;
                    align-items: center;
                    height: $sidebar-width + $opener-image-bleed;
                    padding-left: $sidebar-gap + $text-indent + $opener-image-bleed;
                    padding-right: $sidebar-gap;
                    padding-top: $opener-image-bleed;
                    margin-right: $sidebar-gap;
                    margin-top: -($opener-image-bleed);
                    margin-left: -($sidebar-gap + $opener-image-bleed);

                    // Type
                    background-color: white;
                    color: black;
                    font-weight: 300;
                    line-height: inherit;
                }
            }
        }
    }
}


// Chapter numbers

// The spec design used the word 'chapter'
// before the number, but Ketida only inserts
// a number. We don't want to add generated content
// in CSS, because the book might not be in English.
// So instead, we'll add a design where the chapter number
// sits to the left of the header text.

.chapter-number {

    // Type
    @include heading-1(24px);
    background-color: $theme-color-accent;
    color: white;
    font-family: $font-display-main;
    font-weight: 500;
    letter-spacing: 0.05em;
    padding: 2mm 2mm 2mm (2mm + $opener-image-bleed + ($line-height-default * 2));
    text-transform: uppercase;

    // Position
    height: $line-height-default * 2;
    min-width: 50mm;
    position: absolute;
    text-align: right;

    transform-origin: left;
    transform: rotate(90deg);
    z-index: 1;

    // When element rotates from the left,
    // it effectively moves down and left
    // by a multiple of the element height.
    // Relates to padding-left above.
    top: -($margin-top + $opener-image-bleed + ($line-height-default * 2));
    left: $line-height-default;

    & + h1 {
        margin-top: 0;
    }
}


// Component/chapter subtitles

.cst {
    @include subtitle();
}


// Opening boxes

.learning-objectives {
    @include boxes-common($theme-color-accent, white);

    // Assumes there will be an element with margin-top
    // after this, like a heading. This way, the box
    // can merge visually with, say, .outline.
    margin-bottom: 0;

    & > p {
        @include small-caps();
        font-size: $font-size-default-small;
        margin-bottom: 0;
    }

    ul, ol {
        margin: 0 0 0 $line-height-default; // not sure why LHD
        padding: 0;
    }

    & + .outline {

        // Need to override specificity here,
        // because of how paged.js rewrites CSS here.
        margin: 0 0 $line-height-default 0!important;
    }
}

.outline {
    @include boxes-common($theme-color-accent, white);

    // Assumes there will be an element with margin-top
    // after this, like a heading. This way, the box
    // can merge visually with, say, .learning-objectives.
    margin-bottom: 0;

    & > p {
        @include small-caps();
        font-size: $font-size-default-small;
        margin-bottom: 0;
    }

    ul, ol {
        list-style-type: none;
        margin: 0;
        padding: 0;
    }

    & + .learning-objectives {
        // Need to override specificity here,
        // because of how paged.js rewrites CSS here.
        margin: 0 0 $line-height-default 0!important;
    }
}
