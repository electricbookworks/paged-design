// Requires that margin-top and line-height-default
// are defined with the same units, e.g. px.
$opener-image-height: $margin-top + ($line-height-default * 14);
$opener-image-bleed: 3mm;
$part-page-circular-image-height: 400mm;

$pages-with-light-circle-device: frontmatter, unnumbered, introduction, endmatter;

@each $page in $pages-with-light-circle-device {

    .pagedjs_#{$page}_page.pagedjs_left_page {

        h1 {
            @include circle-above-header("left");

            margin-bottom: $line-height-default * 5;
        }
    }

    .pagedjs_#{$page}_page.pagedjs_right_page {

        h1 {
            @include circle-above-header("right");

            margin-bottom: $line-height-default * 5;
        }
    }
}

.component-body {

    // The heading below the image
    header {

        &:first-of-type {
            margin-top: calc(#{$opener-image-height} - #{$line-height-default} * 5);
        }

        & ~ p.author {
            font-style: italic;
            line-height: $line-height-default;
            margin-bottom: $line-height-default * 1.5;
            margin-top: $line-height-default * 0.5;
            max-width: 80%;
            text-indent: 0;

            em {
                font-style: normal;
            }
        }
    }

    // Depends on this image being early enough
    // in the chapter that it's on the first page.
    // And these only display big on .component-body.
    .content-opener-image {

        figure {
            display: contents;
            margin: 0;

            img {
                position: absolute;

                // We set the bleed directly here rather than using $bleed
                // because we want the image to appear the same in
                // screen PDF (where bleed is 0) and print PDF (with bleed).
                // We use calc where variables might be defined with
                // different units, e.g. mm or pt.
                top: -($margin-top + $opener-image-bleed);
                left: -($margin-inside);
                width: $page-width - ($sidebar-width * 0.5);
                border-radius: 0 0 ($opener-image-height * 0.5) 0;
                height: $opener-image-height + $opener-image-bleed;
                margin: 0;
                max-width: none;
                object-fit: cover;
            }

            figcaption {

                // Position
                position: absolute;
                bottom: 0;
                right: -($sidebar-width - $sidebar-gap);
                width: $sidebar-width - ($sidebar-gap * 2);

                // Appearance
                border-top: $rule-thickness solid $theme-color-accent;
                font-family: $font-text-secondary;
                font-size: $font-size-default-small;
                padding-top: $line-height-default / 2;
            }
        }
    }

    // Also see part-page.scss
    &.part {

        // Content on this page should not
        // disappear behind the left-hand wavy box.
        padding-left: 90mm;

        .content-opener-image {

            figure {

                img {
                    background-color: $theme-color-accent;
                    clip-path: circle(($part-page-circular-image-height * 0.5) at center);
                    min-height: $part-page-circular-image-height;
                    width: $part-page-circular-image-height;
                    top: -($margin-top + 225px); // magic number?
                    left: -($part-page-circular-image-height * 0.8);
                    z-index: -1;
                }
            }
        }

        header {

            // Header fills half of page so that
            // any other items on the part page
            // appear low down on the page, allowing
            // space for image. Text might be unreadable
            // over a given image. But this is unavoidable
            // if we want users to be able to put content
            // on par pages.
            &:first-of-type {
                margin-top: ($page-height - $margin-top - $margin-bottom) * 0.7;
            }

            h1 {

                // Position
                position: absolute;
                top: ($page-height - $margin-top - $margin-bottom) * 0.5;
                left: 90mm;
                transform: translatey(-50%);
                margin: 0;
                width: $page-width -$margin-inside - 90mm - ($sidebar-gap * 2);

                // Type
                color: black;
                font-size: 64px;

                strong:first-of-type {

                    // Position
                    position: absolute;
                    left: -90mm;
                    display: block;
                    text-align: right;
                    width: 70mm;

                    // Type
                    color: white;
                    font-family: $font-display-secondary;
                    font-size: 64px;
                    font-weight: bold;
                    line-height: inherit;
                }
            }
        }
    }
}


// Chapter numbers

// The spec design used the word 'chapter'
// before the number, but Ketida only inserts
// a number. We don't want to add generated content
// in CSS, because the book might not be in English.
// So instead, we'll add a design where the chapter number
// sits to the left of the header text.

.chapter-number {

    // Appearance
    @include heading-1();
    background-color: $theme-color-accent;
    border-radius: 20mm;
    color: white;
    font-style: italic;
    font-weight: bold;

    // Position
    display: flex;
    align-items: center;
    justify-content: center;
    width: 20mm;
    height: 20mm;
    margin-top: -20px;
    margin-left: -10mm;
    position: relative;
    z-index: 1;

    & + .component-title {
        margin-top: 0;
    }
}


// Component/chapter subtitles

.cst {
    @include subtitle();
}


// Opening boxes

.learning-objectives {
    @include boxes-common();

    & > p {
        @include small-caps();
        color: $theme-color-accent;
        font-size: $font-size-default-small;
        margin-bottom: 0;
    }

    ul, ol {
        margin: 0 0 0 $line-height-default; // not sure why LHD
        padding: 0;
    }
}

.outline {
    @include boxes-common();

    & > p {
        @include small-caps();
        color: $theme-color-accent;
        font-size: $font-size-default-small;
        margin-bottom: 0;
    }

    ul, ol {
        margin: 0 0 0 $line-height-default; // not sure why LHD
        padding: 0;
    }
}
